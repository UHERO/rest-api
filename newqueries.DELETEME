/* YOYChange */
SELECT t1.date, (t1.value - t2.value) / series.units AS yoy,
    (t1.pseudo_history = true) AND (t2.pseudo_history = true) AS ph, series.decimals
FROM public_data_points AS t1
LEFT JOIN public_data_points AS t2 ON t2.series_id = t1.series_id
                                  AND t2.date = DATE_SUB(t1.date, INTERVAL 1 YEAR)
JOIN series_v AS series ON t1.series_id = series.id
WHERE t1.series_id = ?

/* YOYPercentChange */
SELECT t1.date, (t1.value/t2.value - 1) * 100 AS yoy,
    (t1.pseudo_history = true) AND (t2.pseudo_history = true) AS ph, series.decimals
FROM public_data_points AS t1
LEFT JOIN public_data_points AS t2 ON t2.series_id = t1.series_id
                                  AND t2.date = DATE_SUB(t1.date, INTERVAL 1 YEAR)
JOIN series_v AS series ON t1.series_id = series.id
WHERE t1.series_id = ?

/* YTDChange */
WITH ytd_agg AS (
    SELECT p1.series_id, p1.date, p1.value, p1.pseudo_history, sum(p2.value) AS ytd_sum, sum(p2.value)/count(*) AS ytd_avg
    FROM public_data_points p1 JOIN public_data_points p2
       ON p2.series_id = p1.series_id
      AND year(p2.date) = year(p1.date)
      AND p2.date <= p1.date
    WHERE p1.series_id = ?
    GROUP BY 1, 2, 3
)
SELECT t1.date, (t1.ytd_avg - t2.ytd_avg) / s.units AS ytd_change,
    (t1.pseudo_history = true) AND (t2.pseudo_history = true) AS ph, s.decimals
FROM ytd_agg AS t1
   LEFT JOIN ytd_agg AS t2 ON t2.date = DATE_SUB(t1.date, INTERVAL 1 YEAR)
   JOIN series_v AS s ON s.id = t1.series_id

/* YTDPercentChange */
WITH ytd_agg AS (
    SELECT p1.series_id, p1.date, p1.value, p1.pseudo_history, sum(p2.value) AS ytd_sum, sum(p2.value)/count(*) AS ytd_avg
    FROM public_data_points p1 JOIN public_data_points p2
       ON p2.series_id = p1.series_id
      AND year(p2.date) = year(p1.date)
      AND p2.date <= p1.date
    WHERE p1.series_id = ?
    GROUP BY 1, 2, 3
)
SELECT t1.date, (t1.ytd_sum / t2.ytd_sum - 1) * 100 AS ytd_pct_change,
    (t1.pseudo_history = true) AND (t2.pseudo_history = true) AS ph, s.decimals
FROM ytd_agg AS t1
   LEFT JOIN ytd_agg AS t2 ON t2.date = DATE_SUB(t1.date, INTERVAL 1 YEAR)
   JOIN series_v AS s ON s.id = t1.series_id



---------------------------------------- --
/* FIXED UP BY DAVE, 1 JUL 2020 */
SELECT t1.date, (t1.c5ma - t2.c5ma) / s.units AS c5ma_change,
       (t1.pseudo_history = true) AND (t2.pseudo_history = true) AS ph, s.decimals
FROM (
    SELECT pdp1.series_id, pdp1.date, pdp1.pseudo_history,
           CASE WHEN count(*) = 5 THEN avg(pdp2.value) ELSE NULL END AS c5ma
    FROM public_data_points AS pdp1
    JOIN public_data_points AS pdp2 ON pdp2.series_id = pdp1.series_id
                                   AND pdp2.date BETWEEN DATE_SUB(pdp1.date, INTERVAL 2 YEAR)
                                                     AND DATE_ADD(pdp1.date, INTERVAL 2 YEAR)
    WHERE pdp1.series_id = ?
    GROUP by pdp1.series_id, pdp1.date, pseudo_history
) AS t1
LEFT JOIN (
    SELECT pdp1.series_id, pdp1.date, pdp1.pseudo_history,
           CASE WHEN count(*) = 5 THEN avg(pdp2.value) ELSE NULL END AS c5ma
    FROM public_data_points AS pdp1
    JOIN public_data_points AS pdp2 ON pdp2.series_id = pdp1.series_id
                                   AND pdp2.date BETWEEN DATE_SUB(pdp1.date, INTERVAL 2 YEAR)
                                                     AND DATE_ADD(pdp1.date, INTERVAL 2 YEAR)
    WHERE pdp1.series_id = ?
    GROUP by pdp1.series_id, pdp1.date, pdp1.pseudo_history
) AS t2
   ON t2.date = DATE_SUB(t1.date, INTERVAL 1 YEAR)
LEFT JOIN series_v AS s ON s.id = t1.series_id




SELECT t1.date, (t1.c5ma - t2.last_c5ma)/series.units AS c5ma,
			(t1.pseudo_history = b'1') AND (t2.pseudo_history = b'1') AS ph, series.decimals
FROM (
    SELECT pdp2.series_id, pdp1.date,
    CASE WHEN count(*) = 5 THEN avg(pdp2.value) ELSE NULL END AS c5ma,
        DATE_SUB(pdp1.date, INTERVAL 1 YEAR) AS last_year,
        pdp1.pseudo_history
    FROM (SELECT date, value, pseudo_history FROM public_data_points WHERE series_id = ?) AS pdp1
		 INNER JOIN public_data_points AS pdp2
            ON pdp2.date BETWEEN DATE_SUB(pdp1.date, INTERVAL 2 YEAR) AND DATE_ADD(pdp1.date, INTERVAL 2 YEAR)
	WHERE series_id = ?
    GROUP by series_id, date, last_year, pseudo_history
) AS t1
LEFT JOIN (SELECT pdp2.series_id, pdp1.date,
                CASE WHEN count(*) = 5 THEN avg(pdp2.value) ELSE NULL END AS last_c5ma,
                pdp1.pseudo_history
           FROM (SELECT date, value, pseudo_history FROM public_data_points WHERE series_id = ?) AS pdp1
				INNER JOIN public_data_points AS pdp2
                    ON pdp2.date BETWEEN DATE_SUB(pdp1.date, INTERVAL 2 YEAR) AND DATE_ADD(pdp1.date, INTERVAL 2 YEAR)
           WHERE series_id = ?
	       GROUP by series_id, date, pseudo_history
) AS t2
    ON (t1.last_year = t2.date)


/* c5ma change */
SELECT t1.date, (t1.c5ma - t2.last_c5ma)/series.units AS c5ma,
			(t1.pseudo_history = b'1') AND (t2.pseudo_history = b'1') AS ph, series.decimals
FROM (SELECT pdp2.series_id, pdp1.date,
          CASE WHEN count(*) = 5 THEN avg(pdp2.value) ELSE NULL END AS c5ma,
          DATE_SUB(pdp1.date, INTERVAL 1 YEAR) AS last_year,
          pdp1.pseudo_history
      FROM (SELECT date, value, pseudo_history FROM public_data_points WHERE series_id = ?) AS pdp1
	  JOIN public_data_points AS pdp2 ON pdp2.date BETWEEN DATE_SUB(pdp1.date, INTERVAL 2 YEAR)
                                                       AND DATE_ADD(pdp1.date, INTERVAL 2 YEAR)
      WHERE series_id = ?
	  GROUP by series_id, date, last_year, pseudo_history
) AS t1
LEFT JOIN (SELECT pdp2.series_id, pdp1.date,
               CASE WHEN count(*) = 5 THEN avg(pdp2.value) ELSE NULL END AS last_c5ma,
               pdp1.pseudo_history
           FROM (SELECT date, value, pseudo_history FROM public_data_points WHERE series_id = ?) AS pdp1
		   JOIN public_data_points AS pdp2 ON pdp2.date BETWEEN DATE_SUB(pdp1.date, INTERVAL 2 YEAR)
                                                            AND DATE_ADD(pdp1.date, INTERVAL 2 YEAR)
           WHERE series_id = ?
		   GROUP by series_id, date, pseudo_history
) AS t2 ON (t1.last_year = t2.date)
LEFT JOIN <%SERIES%> AS series ON t1.series_id = series.id;


/* newly generated version */
WITH c5ma_agg AS (
    SELECT p1.series_id, p1.date, p1.pseudo_history, CASE WHEN count(*) = 5 THEN AVG(p2.value) ELSE NULL END AS c5ma
    FROM public_data_points AS p1
    JOIN public_data_points AS p2 ON p2.series_id = p1.series_id
                                 AND p2.date BETWEEN DATE_SUB(p1.date, INTERVAL 2 YEAR)
                                                 AND DATE_ADD(p1.date, INTERVAL 2 YEAR)
    WHERE p1.series_id = ?
    GROUP BY 1, 2, 3
)
SELECT cur.date, (cur.c5ma - lastyear.c5ma) / series.units AS c5ma_change,
      (cur.pseudo_history = true AND lastyear.pseudo_history = true) AS ph, series.decimals
FROM c5ma_agg AS cur
JOIN c5ma_agg AS lastyear ON lastyear.date = DATE_SUB(cur.date, INTERVAL 1 YEAR)
LEFT JOIN series_v AS series ON series.id = cur.series_id;

